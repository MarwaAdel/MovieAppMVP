// Generated by Dagger (https://google.github.io/dagger).
package com.dev.movieapp.ui.activities.landing;

import com.dev.movieapp.networking.NetworkProcessor;
import com.dev.movieapp.utils.AppUtils;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class ResultListActivity_MembersInjector
    implements MembersInjector<ResultListActivity> {
  private final Provider<NetworkProcessor> mNetworkProcessorProvider;

  private final Provider<AppUtils> mAppUtilsProvider;

  public ResultListActivity_MembersInjector(
      Provider<NetworkProcessor> mNetworkProcessorProvider, Provider<AppUtils> mAppUtilsProvider) {
    this.mNetworkProcessorProvider = mNetworkProcessorProvider;
    this.mAppUtilsProvider = mAppUtilsProvider;
  }

  public static MembersInjector<ResultListActivity> create(
      Provider<NetworkProcessor> mNetworkProcessorProvider, Provider<AppUtils> mAppUtilsProvider) {
    return new ResultListActivity_MembersInjector(mNetworkProcessorProvider, mAppUtilsProvider);
  }

  @Override
  public void injectMembers(ResultListActivity instance) {
    injectMNetworkProcessor(instance, mNetworkProcessorProvider.get());
    injectMAppUtils(instance, mAppUtilsProvider.get());
  }

  public static void injectMNetworkProcessor(
      ResultListActivity instance, NetworkProcessor mNetworkProcessor) {
    instance.mNetworkProcessor = mNetworkProcessor;
  }

  public static void injectMAppUtils(ResultListActivity instance, AppUtils mAppUtils) {
    instance.mAppUtils = mAppUtils;
  }
}
