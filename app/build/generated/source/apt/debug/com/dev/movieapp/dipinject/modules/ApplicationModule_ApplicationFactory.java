// Generated by Dagger (https://google.github.io/dagger).
package com.dev.movieapp.dipinject.modules;

import android.app.Application;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ApplicationModule_ApplicationFactory implements Factory<Application> {
  private final ApplicationModule module;

  public ApplicationModule_ApplicationFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public Application get() {
    return provideInstance(module);
  }

  public static Application provideInstance(ApplicationModule module) {
    return proxyApplication(module);
  }

  public static ApplicationModule_ApplicationFactory create(ApplicationModule module) {
    return new ApplicationModule_ApplicationFactory(module);
  }

  public static Application proxyApplication(ApplicationModule instance) {
    return Preconditions.checkNotNull(
        instance.application(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
