// Generated by Dagger (https://google.github.io/dagger).
package com.dev.movieapp.dipinject.modules;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import retrofit2.Retrofit;

public final class NetworkModule_ProvideCallFactory implements Factory<Retrofit> {
  private final NetworkModule module;

  public NetworkModule_ProvideCallFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public Retrofit get() {
    return provideInstance(module);
  }

  public static Retrofit provideInstance(NetworkModule module) {
    return proxyProvideCall(module);
  }

  public static NetworkModule_ProvideCallFactory create(NetworkModule module) {
    return new NetworkModule_ProvideCallFactory(module);
  }

  public static Retrofit proxyProvideCall(NetworkModule instance) {
    return Preconditions.checkNotNull(
        instance.provideCall(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
