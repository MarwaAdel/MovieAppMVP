// Generated by Dagger (https://google.github.io/dagger).
package com.dev.movieapp.dipinject.modules;

import com.dev.movieapp.utils.AppUtils;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ApplicationModule_GetUtilsFactory implements Factory<AppUtils> {
  private final ApplicationModule module;

  public ApplicationModule_GetUtilsFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public AppUtils get() {
    return provideInstance(module);
  }

  public static AppUtils provideInstance(ApplicationModule module) {
    return proxyGetUtils(module);
  }

  public static ApplicationModule_GetUtilsFactory create(ApplicationModule module) {
    return new ApplicationModule_GetUtilsFactory(module);
  }

  public static AppUtils proxyGetUtils(ApplicationModule instance) {
    return Preconditions.checkNotNull(
        instance.getUtils(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
